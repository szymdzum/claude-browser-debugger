name: CI

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: test (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run tests
        run: pytest tests/ -v --tb=short

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'

      - name: Install pylint
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Lint code
        run: pylint scripts/cdp/ --disable=missing-docstring,too-few-public-methods,import-error,duplicate-code --fail-under=9.0

  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'

      - name: Install mypy
        run: |
          python -m pip install --upgrade pip
          pip install mypy

      - name: Type check
        run: mypy scripts/cdp/ --ignore-missing-imports --explicit-package-bases
