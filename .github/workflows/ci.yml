name: CI

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'LICENSE'
      - '.gitignore'
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'LICENSE'
      - '.gitignore'
  schedule:
    # Run full matrix nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

# Prevent PR runs from canceling scheduled runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: test (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Test only 3.10 (minimum) and 3.12 (latest stable)
        python-version: ["3.10", "3.12"]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            setup.py

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run tests
        run: pytest tests/ -v --tb=short

      - name: CLI smoke tests (no Chrome required)
        run: |
          # Test all 7 subcommands show help text
          python -m scripts.cdp.cli.main --help
          python -m scripts.cdp.cli.main session --help
          python -m scripts.cdp.cli.main eval --help
          python -m scripts.cdp.cli.main dom --help
          python -m scripts.cdp.cli.main console --help
          python -m scripts.cdp.cli.main network --help
          python -m scripts.cdp.cli.main orchestrate --help
          python -m scripts.cdp.cli.main query --help

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.10"
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            setup.py

      - name: Cache pylint artifacts
        uses: actions/cache@v4
        with:
          path: ~/.pylint.d
          key: pylint-${{ runner.os }}-${{ hashFiles('scripts/cdp/**/*.py') }}
          restore-keys: |
            pylint-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Lint code
        run: pylint scripts/cdp/ --disable=missing-docstring,too-few-public-methods,import-error,duplicate-code --fail-under=9.0

  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.10"
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            setup.py

      - name: Cache mypy artifacts
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: mypy-${{ runner.os }}-${{ hashFiles('scripts/cdp/**/*.py') }}
          restore-keys: |
            mypy-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Type check
        run: mypy scripts/cdp/ --ignore-missing-imports --explicit-package-bases

  # Optional: PR comment on test failure
  comment-on-failure:
    name: comment-on-failure
    runs-on: ubuntu-latest
    needs: [test, lint, typecheck]
    if: failure() && github.event_name == 'pull_request'
    permissions:
      pull-requests: write
    steps:
      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ## ‚ùå CI Checks Failed

            One or more CI checks have failed. Please review the logs:

            - [View workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            **Common fixes:**
            - Run tests locally: `pytest tests/ -v --tb=short`
            - Check linting: `pylint scripts/cdp/ --disable=missing-docstring,too-few-public-methods,import-error,duplicate-code --fail-under=9.0`
            - Check types: `mypy scripts/cdp/ --ignore-missing-imports --explicit-package-bases`
            - Test CLI commands: `python -m scripts.cdp.cli.main --help`
